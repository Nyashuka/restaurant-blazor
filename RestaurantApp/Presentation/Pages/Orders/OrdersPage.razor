@page "/orders"
@attribute [Authorize(Roles = "User")]

@inject RestaurantDialogFactory DialogFactory
@inject IOrderService OrderService
@inject IPaymentService PaymentService
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudLink Variant="Variant.Filled" 
		Color="Color.Primary"
        style="font-size: 24px; margin-left: 10px;"
		href="/orders/create">
    Створити замовлення
</MudLink>

<MudGrid Class="mt-1">
@foreach(var order in Orders)
{
    <MudItem Style="width: 100%; display: block;">
        <MudPaper Class="pa-4" Style="width: 100%; display: block;">
            <div style="display: inline-block; max-width: 100%; width: auto;">
                <MudStack>
                    <MudLink Variant="Variant.Filled" Color="Color.Primary" style="font-size: 24px;"
                        href="@($"/orders/{order.Id}")">
                        №@order.Id
                    </MudLink>
                    <MudDivider style="border: 2px solid;" />
                    <MudText Typo="Typo.h5">
                        @order.EventType.Name
                    </MudText>
                    <MudText Typo="Typo.h5" Align="Align.Left">
                        @if(order.OrderDays.Count > 1)
                        {
                                <text>@(order.OrderDays.Min(x => x.Date.ToLocalTime()).Date.ToString($"dd.MM.yyyy")) - @(order.OrderDays.Max(x
                            => x.Date).ToLocalTime().Date.ToString($"dd.MM.yyyy"))</text>
                        }
                        else
                        {
                                <text>@(order.OrderDays.FirstOrDefault().Date.ToLocalTime().Date.ToString($"dd.MM.yyyy"))</text>
                        }
                    </MudText>
                </MudStack>
                <MudPaper
                    Class="@GetStatusClass(order.Status)"
                    Style="padding: 0 5px; display: inline-block; width: auto; margin-top: 15px;"
                    FlexGrow="0">
                    <MudText Typo="Typo.subtitle2" Style="color: black;">
                        @if(order.Status == OrderStatusEnum.Created)
                        {
                            <text>очікує на підтвердження менеджера...</text>
                        }
                        else if(order.Status == OrderStatusEnum.AwaitingPayment)
                        {
                            <text>очікує на оплату</text>
                        }
                        else if(order.Status == OrderStatusEnum.Confirmed)
                        {
                            <text>підтверджено!</text>
                        }
                        else if(order.Status == OrderStatusEnum.Canceled)
                        {
                            <text>відмінено</text>
                        }
                    </MudText>
                </MudPaper>
                <div style="margin-top: 15px;">
                    @if(order.Status == OrderStatusEnum.Created)
                    {
                        <MudButton style="margin-right: 15px;" Variant="Variant.Filled" Color="Color.Primary"
                            @onclick="@(() => PayForOrder(order))">
                            Редагувати
                        </MudButton>
                    }
                    else if(order.Status == OrderStatusEnum.AwaitingPayment)
                    {
                        <MudButton style="margin-right: 15px;" Variant="Variant.Filled" Color="Color.Primary"
                            @onclick="@(() => PayForOrder(order))">
                            Оплатити
                        </MudButton>
                    }
                    <MudButton  Variant="Variant.Filled" Color="Color.Primary" @onclick="@(() => OpenDetailsDialog(order))">
                        Деталі
                    </MudButton>
                </div>
            </div>
        </MudPaper>
    </MudItem>
}
</MudGrid>

@code {
    private string GetStatusClass(OrderStatusEnum status)
    {
        return status switch
        {
            OrderStatusEnum.Canceled => "order-status-canceled",
            OrderStatusEnum.Confirmed => "order-status-confirmed",
            _ => "order-status-default"
        };
    }
}

<style>

.order-status-canceled {
    background-color: red;
}
.order-status-confirmed {
    background-color: green;
}
.order-status-default {
    background-color: gray;
}
</style>