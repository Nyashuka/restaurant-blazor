<MudPaper class="dish-container">
    <MudStack Row="true">
        <div class="dish-picture">
        </div>

        <MudStack>
            <h1>
                @DishToAdd.Dish.Name
            </h1>

            @if(DishToAdd.IsSelected)
            {
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="OnRemoveClicked">
                    Remove
                </MudButton>
            }
            else
            {
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="OnAddClicked">
                    Add
                </MudButton>
            }
        </MudStack>
    </MudStack>
</MudPaper>

<style>
    .dish-container {
        gap: 10px;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
    }

    .dish-picture {
        width: 300px;
        max-width: 300px;
        margin: 10px;
        background-color: blue;
        height: 100px;
    }

    .dish-title {
        width: 100%;
        align-items: start;
    }
    .dish-buttons {
        width: 100%;
        align-items: start;
    }
</style>

@code {
    [Parameter] public DishToSelect? DishToAdd { get; set; }
    [Parameter] public EventCallback<Dish> OnAddDish { get; set; }

    [Parameter] public EventCallback<Dish> OnRemoveDish { get; set; }

    private async Task OnAddClicked()
    {
        DishToAdd.IsSelected = true;
        await OnAddDish.InvokeAsync(DishToAdd.Dish);
    }

    private async Task OnRemoveClicked()
    {
        DishToAdd.IsSelected = false;
        await OnRemoveDish.InvokeAsync(DishToAdd.Dish);
    }
}